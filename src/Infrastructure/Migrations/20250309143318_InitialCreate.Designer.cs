// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250309143318_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MediaFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Favourite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MediaFile");

                    b.HasDiscriminator().HasValue("MediaFile");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Entities.Watchlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Watchlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Top-rated movies and series",
                            Name = "My Favorites"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Movies and series to watch later",
                            Name = "Watch Later"
                        });
                });

            modelBuilder.Entity("GenreMediaFile", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MediaFilesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GenresId", "MediaFilesId");

                    b.HasIndex("MediaFilesId");

                    b.ToTable("GenreMediaFile");
                });

            modelBuilder.Entity("MediaFileWatchlist", b =>
                {
                    b.Property<int>("MediaFilesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WatchlistsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MediaFilesId", "WatchlistsId");

                    b.HasIndex("WatchlistsId");

                    b.ToTable("MediaFileWatchlist");
                });

            modelBuilder.Entity("Domain.Entities.Movie", b =>
                {
                    b.HasBaseType("Domain.Entities.MediaFile");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Director = "",
                            Duration = 0,
                            Favourite = false,
                            Name = "Inception",
                            Rating = "PG-13",
                            ReleaseDate = 2010,
                            Status = 2,
                            URL = "",
                            Length = 148
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Director = "",
                            Duration = 0,
                            Favourite = false,
                            Name = "The Matrix",
                            Rating = "R",
                            ReleaseDate = 1999,
                            Status = 2,
                            URL = "",
                            Length = 136
                        });
                });

            modelBuilder.Entity("Domain.Entities.Series", b =>
                {
                    b.HasBaseType("Domain.Entities.MediaFile");

                    b.Property<int>("NumberOfEpisodes")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Series");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Description = "",
                            Director = "",
                            Duration = 0,
                            Favourite = false,
                            Name = "Breaking Bad",
                            Rating = "TV-MA",
                            ReleaseDate = 2008,
                            Status = 2,
                            URL = "",
                            NumberOfEpisodes = 62
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Director = "",
                            Duration = 0,
                            Favourite = false,
                            Name = "Stranger Things",
                            Rating = "TV-14",
                            ReleaseDate = 2016,
                            Status = 1,
                            URL = "",
                            NumberOfEpisodes = 34
                        });
                });

            modelBuilder.Entity("GenreMediaFile", b =>
                {
                    b.HasOne("Domain.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.MediaFile", null)
                        .WithMany()
                        .HasForeignKey("MediaFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MediaFileWatchlist", b =>
                {
                    b.HasOne("Domain.Entities.MediaFile", null)
                        .WithMany()
                        .HasForeignKey("MediaFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Watchlist", null)
                        .WithMany()
                        .HasForeignKey("WatchlistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
